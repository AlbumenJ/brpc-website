<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bRPC – Listener 配置</title>
    <link>https://brpc.incubator.apache.org/docs/configuration/server/listener/</link>
    <description>Recent content in Listener 配置 on bRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://brpc.incubator.apache.org/docs/configuration/server/listener/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: FilterChain</title>
      <link>https://brpc.incubator.apache.org/docs/configuration/server/listener/filter-chain/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/docs/configuration/server/listener/filter-chain/</guid>
      <description>
        
        
        &lt;p&gt;本文描述的是 MOSN 的 FilterChain 配置。&lt;/p&gt;
&lt;p&gt;FilterChain 是 MOSN Listener 配置中核心逻辑配置，不同的 FilterChain 配置描述了 Listener 会如何处理请求。&lt;/p&gt;
&lt;p&gt;目前 MOSN 一个 Listener 只支持一个 FilterChain。&lt;/p&gt;
&lt;p&gt;FilterChain 的配置结构如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;tls_context&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;tls_context_set&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;filters&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[]&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;tls_context_set&#34;&gt;tls_context_set&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一组 &lt;code&gt;tls_context&lt;/code&gt; 配置，MOSN 默认使用 &lt;code&gt;tls_context_set&lt;/code&gt; 来描述 listener 的 TLS 的证书信息。&lt;/li&gt;
&lt;li&gt;一个 listener 可同时支持配置多张 TLS 证书。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tls_context&#34;&gt;tls_context&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;单独配置 &lt;code&gt;tls_context&lt;/code&gt; 而不是使用 &lt;code&gt;tls_context_set&lt;/code&gt; 是兼容 MOSN 历史配置（只支持一张证书配置时）的场景，这种配置方式后面会逐步废弃。&lt;/li&gt;
&lt;li&gt;tls_context 的详细配置说明，参考 &lt;a href=&#34;../../custom#tls-context&#34;&gt;tls_context&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;filters&#34;&gt;filters&lt;/h3&gt;
&lt;p&gt;一组 network filter 配置。&lt;/p&gt;
&lt;h3 id=&#34;network-filter&#34;&gt;network filter&lt;/h3&gt;
&lt;p&gt;network filter 描述了 MOSN 在连接建立以后如何在 4 层处理连接数据。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;type 是一个字符串，描述了 filter 的类型。&lt;/li&gt;
&lt;li&gt;config 可以是任意 json 配置，描述不同 filter 的配置。&lt;/li&gt;
&lt;li&gt;network filter 可自定义扩展实现，默认支持的 type 包括 &lt;code&gt;proxy&lt;/code&gt;、&lt;code&gt;tcp proxy&lt;/code&gt;、&lt;code&gt;connection_manager&lt;/code&gt;。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;connection_manager&lt;/code&gt; 是一个特殊的 network filter，它需要和 &lt;code&gt;proxy&lt;/code&gt; 一起使用，用于描述 &lt;code&gt;proxy&lt;/code&gt; 中路由相关的配置，是一个兼容性质的配置，后续可能有修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Network Filter</title>
      <link>https://brpc.incubator.apache.org/docs/configuration/server/listener/network-filter/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/docs/configuration/server/listener/network-filter/</guid>
      <description>
        
        
        
      </description>
    </item>
    
  </channel>
</rss>
