<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bRPC â€“ Configuration overview</title>
    <link>https://brpc.incubator.apache.org/en/docs/configuration/</link>
    <description>Recent content in Configuration overview on bRPC</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 20 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://brpc.incubator.apache.org/en/docs/configuration/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Listener configurations</title>
      <link>https://brpc.incubator.apache.org/en/docs/configuration/listener/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/en/docs/configuration/listener/</guid>
      <description>
        
        
        &lt;p&gt;This topic describes the listener configurations of MOSN.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can specify the ports on which MOSN listens upon startup and the specific logic corresponding to the ports in listener configurations.&lt;/li&gt;
&lt;li&gt;You can supplement or modify listener configurations through dynamic listener APIs.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;address&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;bind_port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;use_original_dst&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;access_logs&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:[],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;filter_chains&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:[],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;stream_filters&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:[],&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;inspector&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;connection_idle_timeout&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;name&#34;&gt;name&lt;/h2&gt;
&lt;p&gt;The name of a listener that is used to uniquely distinguish it from other listeners. If this parameter is left empty, a UUID will be generated by the system as a name by default. When you dynamically upgrade a listener by using its name as the index, a new listener is added if the name does not exist. If the name exists, the listener is updated.&lt;/p&gt;
&lt;h2 id=&#34;type&#34;&gt;type&lt;/h2&gt;
&lt;p&gt;The type of the listener. Valid values &lt;code&gt;ingress&lt;/code&gt; and &lt;code&gt;egress&lt;/code&gt;. Different types of listeners generate different trace logs.&lt;/p&gt;
&lt;h2 id=&#34;address&#34;&gt;address&lt;/h2&gt;
&lt;p&gt;The string in the &lt;code&gt;IP:Port&lt;/code&gt; format. This is the unique address to which the listener listens.&lt;/p&gt;
&lt;h2 id=&#34;bind_port&#34;&gt;bind_port&lt;/h2&gt;
&lt;p&gt;Boolean. Specifies whether the listener will occupy the address specified for the address parameter. Set this parameter to True in most cases.&lt;/p&gt;
&lt;h2 id=&#34;use_original_dst&#34;&gt;use_original_dst&lt;/h2&gt;
&lt;p&gt;Boolean. Used for transparent proxying.&lt;/p&gt;
&lt;h2 id=&#34;access_logs&#34;&gt;access_logs&lt;/h2&gt;
&lt;p&gt;Settings for a group of &lt;code&gt;access logs&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;filter_chains&#34;&gt;filter_chains&lt;/h2&gt;
&lt;p&gt;Settings for a group of &lt;a href=&#34;./filter-chain&#34;&gt;filter chains&lt;/a&gt;. However, MOSN only supports one &lt;code&gt;filter_chain&lt;/code&gt; currently.&lt;/p&gt;
&lt;h2 id=&#34;stream_filters&#34;&gt;stream_filters&lt;/h2&gt;
&lt;p&gt;Settings for a group of &lt;code&gt;stream_filters&lt;/code&gt;. Currently, this parameter is valid only when the filter configured in &lt;code&gt;filter_chain&lt;/code&gt; contains &lt;code&gt;proxy&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;inspector&#34;&gt;inspector&lt;/h2&gt;
&lt;p&gt;Boolean. Specifies whether to allow the listener to handle non-TLS requests even when TLS listener is enabled in &lt;code&gt;filter_chain&lt;/code&gt;. Valid values: True and False.&lt;/p&gt;
&lt;h2 id=&#34;connection_idle_timeout&#34;&gt;connection_idle_timeout&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;../custom#duration-string&#34;&gt;The duration string&lt;/a&gt;, which specifies the timeout value of an idle string. MOSN closes a connection of a listener when its idle duration exceeds the configured idle connection timeout value.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Server configurations</title>
      <link>https://brpc.incubator.apache.org/en/docs/configuration/server/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/en/docs/configuration/server/</guid>
      <description>
        
        
        &lt;p&gt;This topic describes server configurations of MOSN.&lt;/p&gt;
&lt;p&gt;In the configuration structure of MOSN, &lt;code&gt;servers&lt;/code&gt; indicates a server array, but only one server is supported currently.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; describes the following basic global parameters of MOSN.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;default_log_path&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;default_log_level&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;global_log_roller&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;graceful_timeout&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;processor&amp;quot;:&amp;quot;&amp;quot;,
  &amp;quot;listeners&amp;quot;:[]
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;default_log_path&#34;&gt;default_log_path&lt;/h2&gt;
&lt;p&gt;The default error log path, which supports a complete log path, stdout, and stderr.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If this field is left empty, logs are output to stderr by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;default_log_level&#34;&gt;default_log_level&lt;/h2&gt;
&lt;p&gt;The default error log level. Valid values: &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, and &lt;code&gt;FATAL&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Default value: &lt;code&gt;INFO&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;global_log_roller&#34;&gt;global_log_roller&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The log roller configuration, which is valid for all logs, for example, tracelog, accesslog, and defaultlog.&lt;/li&gt;
&lt;li&gt;The string type, which supports two modes: rolling by time and rolling by log size. Only one mode is valid at a time.&lt;/li&gt;
&lt;li&gt;Rolling by log size
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;size&lt;/code&gt;: The log size threshold (in MB) to start rolling.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;age&lt;/code&gt;: The number of days during which the logs will be saved.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keep&lt;/code&gt;: The maximum number of logs to be saved.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compress&lt;/code&gt;: Specifies whether to compress logs. Valid values: on and off.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;global_log_roller&amp;quot;: &amp;quot;size=100 age=10 keep=10 compress=off&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Rolling by time
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt;: The time interval (hours) for rolling.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;global_log_roller&amp;quot;:&amp;quot;time=1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;graceful_timeout&#34;&gt;graceful_timeout&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href=&#34;../custom#duration-string&#34;&gt;Duration String&lt;/a&gt; configuration. Indicates the maximum waiting time for disabling a connection in a hot upgrade of MOSN.&lt;/li&gt;
&lt;li&gt;Default value: 30s.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;processor&#34;&gt;processor&lt;/h3&gt;
&lt;p&gt;The number of &lt;code&gt;GOMAXPROCS&lt;/code&gt; used by MOSN.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Default value: the number of CPUs.&lt;/li&gt;
&lt;li&gt;If it is not set or is set to 0, the default value is used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;listeners&#34;&gt;Listeners&lt;/h2&gt;
&lt;p&gt;Settings for a group of &lt;a href=&#34;../listener&#34;&gt;Listeners&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Trace configurations</title>
      <link>https://brpc.incubator.apache.org/en/docs/configuration/trace/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/en/docs/configuration/trace/</guid>
      <description>
        
        
        &lt;p&gt;This topic describes trace configurations of MOSN.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;trace&lt;/code&gt; describes the following basic global parameters of MOSN.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-josn&#34; data-lang=&#34;josn&#34;&gt;{
  &amp;quot;tracing&amp;quot;: {
    &amp;quot;enable&amp;quot;: true,
    &amp;quot;driver&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;config&amp;quot;: {
      
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;enable&#34;&gt;enable&lt;/h2&gt;
&lt;p&gt;Boolean. Enable or disable trace.&lt;/p&gt;
&lt;h2 id=&#34;driver&#34;&gt;driver&lt;/h2&gt;
&lt;p&gt;Currently, supports &lt;code&gt;SOFATracer&lt;/code&gt; and &lt;code&gt;SkyWalking&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Custom configurations</title>
      <link>https://brpc.incubator.apache.org/en/docs/configuration/custom/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://brpc.incubator.apache.org/en/docs/configuration/custom/</guid>
      <description>
        
        
        &lt;p&gt;This topic describes custom configurations of MOSN.&lt;/p&gt;
&lt;h3 id=&#34;duration-string&#34;&gt;Duration String&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A string that consists of a decimal digit and a time unit suffix. Valid time units: &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;us&lt;/code&gt; (or &lt;code&gt;Âµs&lt;/code&gt;), &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, and &lt;code&gt;h&lt;/code&gt;. For example, &lt;code&gt;1 h&lt;/code&gt;, &lt;code&gt;3s&lt;/code&gt;, and &lt;code&gt;500 ms&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;metadata&#34;&gt;metadata&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;metadata&lt;/code&gt; is used for matching MOSN routes and cluster hosts.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;filter_metadata&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;mosn.lb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mosn.lb&lt;/code&gt; corresponds to any &lt;code&gt;string-string&lt;/code&gt; content.&lt;/p&gt;
&lt;h3 id=&#34;tls_context&#34;&gt;tls_context&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;server_name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ca_cert&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cert_chain&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;private_key&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;verify_client&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;require_client_cert&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;insecure_skip&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;cipher_suites&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ecdh_curves&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;min_version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;max_version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;alpn&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;fall_back&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;extend_verify&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;sds_source&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;status&lt;/code&gt;: Boolean. Indicates whether TLS is enabled. Default value: false.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;: String. Specifies the type of tls_context. tls_context supports extension implementation. Different types correspond to different implementation methods. Default value:&amp;quot;&amp;quot; (empty string).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_name&lt;/code&gt;: Used to verify the hostname of the certificate returned by the server when insecure_skip is not configured. Valid when configured at a cluster.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ca_cert&lt;/code&gt;: The root certificate issued by a trusted certificate authority (CA).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cert_chain&lt;/code&gt;: The TLS certificate chain.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;private_key&lt;/code&gt;: The private key of a certificate.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verify_client&lt;/code&gt;: Boolean. Specifies whether to verify a client certificate. Valid when configured at a listener.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;require_client_cert&lt;/code&gt;: Boolean. Specifies whether the client certificate is required.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;insecure_skip&lt;/code&gt;: Boolean. Specifies whether to skip server certificate verification. Valid when configured at a cluster.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cipher_suites&lt;/code&gt;: Specifies the cipher suites to be supported by TLS connections. If this parameter is specified, TLS connections support only the specified cipher suites and use them according to the order of how they are specified. Separate different cipher suites with a comma. Valid values:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ECDHE-ECDSA-AES256-GCM-SHA384
ECDHE-RSA-AES256-GCM-SHA384
ECDHE-ECDSA-AES128-GCM-SHA256
ECDHE-RSA-AES128-GCM-SHA256
ECDHE-ECDSA-WITH-CHACHA20-POLY1305
ECDHE-RSA-WITH-CHACHA20-POLY1305
ECDHE-RSA-AES256-CBC-SHA
ECDHE-RSA-AES128-CBC-SHA
ECDHE-ECDSA-AES256-CBC-SHA
ECDHE-ECDSA-AES128-CBC-SHA
RSA-AES256-CBC-SHA
RSA-AES128-CBC-SHA
ECDHE-RSA-3DES-EDE-CBC-SHA
RSA-3DES-EDE-CBC-SHA
ECDHE-RSA-SM4-SM3
ECDHE-ECDSA-SM4-SM3
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ecdh_curves&lt;/code&gt;: If this parameter is used, TLS connections support only the specified curves.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Valid values: x25519, p256, p384, and p521.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;min_version&lt;/code&gt;: The earliest TLS version supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Valid values: TLS1.0, TLS1.1, and TLS1.2. Default value: TLS1.0.&lt;/li&gt;
&lt;li&gt;Available TLS versions will be automatically identified by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;max_version&lt;/code&gt;: The latest TLS version supported.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Valid values: TLS1.0, TLS1.1, and TLS1.2. Default value: TLS1.2.&lt;/li&gt;
&lt;li&gt;Available TLS versions will be automatically identified by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;alpn&lt;/code&gt;: Specifies the protocol supported by ALPN on TLS connections.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Valid values: H2, HTTP/1.1, and SOFA.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fall_back&lt;/code&gt;: Boolean. Specifies whether to fall back when certificate verification fails, without returning an error. This is equivalent to the case when TLS is not enabled. Valid values: True and False.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;extend_verify&lt;/code&gt;: JSON. Specifies the extension of tls_context when type is not empty.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sds_source&lt;/code&gt;: Specifies parameters required for accessing the SDS API. If sds_source is configured, the &lt;code&gt;ca_cert&lt;/code&gt;, &lt;code&gt;cert_chain&lt;/code&gt;, and &lt;code&gt;private_key&lt;/code&gt; parameters will be ignored, but other configurations will remain valid.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sds_source&#34;&gt;sds_source&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;CertificateConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{},&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;ValidationConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:{}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CertificateConfig&lt;/code&gt;: Specifies how to obtain the values of cert_chain and private_key.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ValidationConfig&lt;/code&gt;: Specifies how to obtain the value of &lt;code&gt;ca_cert&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;For details about the configurations, see &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto#envoy-api-msg-auth-sdssecretconfig&#34;&gt;envoy: sds_secret_config&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
